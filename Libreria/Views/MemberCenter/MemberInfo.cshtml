@model Libreria.ViewModels.MemberViewModel

@section topCSS{
    @*MemberInfo CSS*@
    <link href="~/Asset/Css/MemberInfo/member_info.css" rel="stylesheet" />
}

@section topJs{
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-Piv4xVNRyMGpqkS2by6br4gNJ7DXjqk09RmUpJ8jgGtD7zP9yug3goQfGII0yAns"
            crossorigin="anonymous"></script>

}
@{
    List<MemberViewModel> member;
    member = ViewBag.member;
}


<div class="container">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item mt-2 mr-3 ml-2">會員資料</li>
        <li class="nav-item">
            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home"
               aria-selected="true">會員資料修改</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab"
               aria-controls="profile" aria-selected="false">密碼修改</a>
        </li>
    </ul>

    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            @foreach (var item in member)
            {
                using (Html.BeginForm("MemberInfo", "MemberCenter", FormMethod.Post, new { @id = "infoForm", @class = "form-group row mt-4" }))
                {
                    @Html.HiddenFor(model => model.memberPassword, new { @class = "form-control", @Value = item.memberPassword })
                    @Html.HiddenFor(model => model.memberPassword, new { @class = "form-control", @Value = item.memberPassword })

                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.memberName, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <p class="card-number">
                                    @Html.HiddenFor(model => model.memberName, new { @class = "form-control", @Value = item.memberName })

                                    @Html.DisplayFor(modelItem => item.memberName)
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.memberUserName, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <p class="name">
                                    @Html.ValidationMessage("memberUserName", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.memberUserName, new { @class = "form-control", @Value = item.memberUserName })
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <p class="birthday">
                                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.birthday, "{0:yyyy-MM-dd}", new { @class = "form-control", @Value = item.birthday.ToString("yyyy-MM-dd"), Type = "date" })
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.IDnumber, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <p class="Id-number">
                                    @Html.ValidationMessageFor(model => model.IDnumber, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.IDnumber, new { @class = "form-control", @Value = item.IDnumber })
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })

                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <div class="gender">
                                    @Html.RadioButtonFor(model => model.Gender, 0, new {  @name = "Gender", @class = "control-label col-md-2 Gender", @id = (item.Gender == 0 ? true : false) })@Html.Label("男")
                                    @Html.RadioButtonFor(model => model.Gender, 1, new {  @name = "Gender", @class = "control-label col-md-2 Gender", @id = (item.Gender == 1 ? true : false) })@Html.Label("女")
                                    @Html.RadioButtonFor(model => model.Gender, 2, new {  @name = "Gender", @class = "control-label col-md-2 Gender", @id = (item.Gender == 2 ? true : false) })@Html.Label("其他")<br>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @Value = item.Email })
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9">
                                <p class="mobilephone-number">
                                    <div name="mobilephone-area" id="mobilephone-area">
                                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                        @Html.TextBoxFor(model => model.MobileNumber, new { @class = "form-control", @Value = item.MobileNumber })
                                    </div>
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.HomeNumber, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="form-content col-xl-4 col-lg-5 col-9 ">
                                <div class="form-row">
                                    @Html.ValidationMessageFor(model => model.HomeNumber, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(model => model.HomeNumber, new { @class = "form-control", @Value = item.HomeNumber })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-group row">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-subtitle col-3 col-xl-1 col-lg-2 text-right text-nowrap" })
                            <div class="recipient_profile_address form-content col-xl-4 col-lg-5 col-9 ">
                                <div class="form-row">

                                    <div class="recipient_profile_select">
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        @Html.DropDownListFor(model => model.City, new List<SelectListItem>{
                                      new SelectListItem{ Value="0",Text="選取縣市"},
                                      new SelectListItem{ Value="臺北市",Text="臺北市", Selected = (item.City == "臺北市" ? true : false) },
                                      new SelectListItem{ Value="新北市",Text="新北市", Selected = (item.City == "新北市" ? true : false) },
                                      new SelectListItem{ Value="桃園市",Text="桃園市", Selected = (item.City == "桃園市" ? true : false) },
                                      new SelectListItem{ Value="臺中市",Text="臺中市", Selected = (item.City == "臺中市" ? true : false) },
                                      new SelectListItem{ Value="臺南市",Text="臺南市", Selected = (item.City == "臺南市" ? true : false) },
                                      new SelectListItem{ Value="高雄市",Text="高雄市", Selected = (item.City == "高雄市" ? true : false) },
                                      new SelectListItem{ Value="基隆市",Text="基隆市", Selected = (item.City == "基隆市" ? true : false) },
                                      new SelectListItem{ Value="新竹市",Text="新竹市", Selected = (item.City == "新竹市" ? true : false) },
                                      new SelectListItem{ Value="嘉義市",Text="嘉義市", Selected = (item.City == "嘉義市" ? true : false) },
                                      new SelectListItem{ Value="新竹縣",Text="新竹縣", Selected = (item.City == "新竹縣" ? true : false) },
                                      new SelectListItem{ Value="苗栗縣",Text="苗栗縣", Selected = (item.City == "苗栗縣" ? true : false) },
                                      new SelectListItem{ Value="彰化縣",Text="彰化縣", Selected = (item.City == "彰化縣" ? true : false) },
                                      new SelectListItem{ Value="南投縣",Text="南投縣", Selected = (item.City == "南投縣" ? true : false) },
                                      new SelectListItem{ Value="雲林縣",Text="雲林縣", Selected = (item.City == "雲林縣" ? true : false) },
                                      new SelectListItem{ Value="嘉義縣",Text="嘉義縣", Selected = (item.City == "嘉義縣" ? true : false) },
                                      new SelectListItem{ Value="屏東縣",Text="屏東縣", Selected = (item.City == "屏東縣" ? true : false) },
                                      new SelectListItem{ Value="宜蘭縣",Text="宜蘭縣", Selected = (item.City == "宜蘭縣" ? true : false) },
                                      new SelectListItem{ Value="花蓮縣",Text="花蓮縣", Selected = (item.City == "花蓮縣" ? true : false) },
                                      new SelectListItem{ Value="臺東縣",Text="臺東縣", Selected = (item.City == "臺東縣" ? true : false) },
                                      new SelectListItem{ Value="澎湖縣",Text="澎湖縣", Selected = (item.City == "澎湖縣" ? true : false) },
                                      new SelectListItem{ Value="金門縣",Text="金門縣", Selected = (item.City == "金門縣" ? true : false) },
                                      new SelectListItem{ Value="連江縣",Text="連江縣", Selected = (item.City == "連江縣" ? true : false) },
                             }, new { @id = "Region", @class = "form-select form-select-lg mb-3", @name = "AddressCitySelect" })

                                        @Html.DropDownListFor(model => model.Region, new List<SelectListItem>{
                                                    new SelectListItem { Value=item.Region.ToString(),Text=item.Region.ToString()}
                                                }, new { @id = "Town", @class = "form-select form-select-lg mb-3" })

                                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @Value = item.Address })
                                    </div>
                                </div>
                                </div>

                            <div class="col-12 mt-2 d-flex justify-content-center">
                                <button><a href="" class="cancel">取消</a></button>
                                <button type="submit" class="confirm">確認</button>
                            </div>

                            </div>
                    </div>
                }
            }
        </div>
                    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                            @using (Html.BeginForm("MemberInfo", "MemberCenter", FormMethod.Post, new { @id = "passwordFrom", @class = "form-group row mt-4" }))
                            {
                                foreach (var item in member)
                                {
                                <div class="row">
                                    <div class="form-group form-input form-row">
                                        <div class="col-12 inputbox"><p>原登入密碼</p><input type="password"></div>
                                        <div class="col-12 inputbox"><p>設定新密碼</p><input type="password"></div>
                                        <div class="col-12 inputbox"><p>確認新密碼</p><input type="password"></div>

                                    </div>

                                </div>
                                <div class="col-12 mt-2 d-flex justify-content-center">
                                    <button><a href="" class="cancel">取消</a></button>
                                    <button type="submit" class="confirm">確認</button>
                                </div>
                                }
                            }
                    </div>
                
            
        
    </div>
 </div>

        @section endJs{
            @*OrderDetail JS*@
            <script src="~/Asset/Js/ShoppingCart/OrderDetail.js"></script>
            <script src="~/Asset/Js/Order/OrderDetail.js" crossorigin="anonymous"></script>
            <script>
            //update data
            @*$("form").submit(function (event) {
                event.preventDefault();
                var formData = new FormData($("infoForm").get(0));
                $.ajax({
                    url: '@Url.Action("ActionName", "ControllerName")',
                    type: 'POST',
                    data: formdata,
                    processData: false,
                    contentType: false,
                    });
            })*@
            </script>


               
            <script>
                    window.onload = () => {
                        requestAreaJson();
                        document.querySelector("#Region").addEventListener("change", findTown);
                        findRadioButtonChecked();
                    }
                    //縣市DropDownList生成
                    const url = "https://raw.githubusercontent.com/eric861129/BuildSchoolLab/main/TwArea.json";
                    let areaArray = [];
                    let _area;
                    let item;
                    let Town = document.getElementById("Town");

                    let townArray = [];
                    let CountiesAttractionArray = [];
                    let texNode;
                    let CountiesLat;
                    let CountiesLng;
             


                    function requestAreaJson() {
                        let xhr = new XMLHttpRequest();
                        xhr.onload = function () {
                            areaArray = JSON.parse(this.response);
                        }
                        xhr.open("GET", url);
                        xhr.send();
                    }
                    function findTown() {
                        //Town.innerHTML = '<option selected>選取鄉政市區</option>';

                        _area = document.querySelector("#Region").value;
                        document.querySelector("#Town").disabled = null;
                        areaArray.forEach(x => {
                            if (x.Counties == _area) {
                                townArray = x.township;
                                CountiesLat = x.lat;
                                CountiesLng = x.lng;
                                Town.innerHTML = "";
                                townArray.forEach(item => {
                                    let newOption = document.createElement('option');
                                    texNode = document.createTextNode(item);
                                    newOption.appendChild(texNode);
                                    Town.appendChild(newOption);
                                });
                            }
                        });
                    }
                //Radio Button checked
                function findRadioButtonChecked() {
                    var witchChecked = document.getElementsByClassName("Gender");
                    var isTrueOrFalse = document.getElementById("True");

                    for (var i = 0; i < witchChecked.length; i++) {
                        if (witchChecked[i].value == isTrueOrFalse.value) {

                            witchChecked[i].setAttribute("checked", "")
                            break;
                        }
                    }
                }
               
               
                    

                   
</script>

            }

@model Libreria.ViewModels.MemberViewModel

@section topCSS{
    <link rel="stylesheet" href="~/Asset/Css/MemberCenter/MemberRegisterPage.css">
}

@{
    ViewBag.Title = "Register";
}

<div class="breadcrumb">
    <div class="container">
        <div class="row">
            <div class="justify-content-center align-items-center col-sm-12 col-md-10 col-lg-9 m-auto p-0">
                <a href="#">首頁</a>
                <i class="fas fa-chevron-right"></i>
                <a href="#">註冊會員</a>
            </div>
        </div>
    </div>
</div>

<div class="register-block">
    <div class="container">
        <div class="row">
            <div class="justify-content-center align-items-center col-sm-12 col-md-10 col-lg-9 m-auto p-0">
                <div class="register-border">
                    <div class="register-form-div">
                        <p class="title">
                            <span>▍</span>
                            <span>註冊會員</span>
                        </p>
                        @using (Html.BeginForm("MemberRegisterPage", "MemberCenter", FormMethod.Post, new { @id = "register-form-id" }))
                        {
                            @Html.AntiForgeryToken()


                            <span style="color:red;">*</span> @Html.LabelFor(model => model.memberName, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessage("memberName", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.memberName, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.memberPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.memberPassword, "", new { @class = "text-danger" })
                            @Html.PasswordFor(model => model.memberPassword, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                            @Html.PasswordFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.memberUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.memberUserName, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.memberUserName, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.IDnumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.ValidationMessageFor(model => model.IDnumber, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.IDnumber, new { htmlAttributes = new { @class = "form-control" } })


                            <span style="color:red;">*</span>@Html.LabelFor(model=>model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.RadioButtonFor(model => model.Gender, 0, htmlAttributes: new { @id = "Gendersradio0", @name = "Gender", @class = "control-label col-md-2" })@Html.Label("男")
                            @Html.RadioButtonFor(model => model.Gender, 1, htmlAttributes: new { @id = "Gendersradio0", @name = "Gender", @class = "control-label col-md-2" })@Html.Label("女")
                            @Html.RadioButtonFor(model => model.Gender, 2, htmlAttributes: new { @id = "Gendersradio0", @name = "Gender", @class = "control-label col-md-2" })@Html.Label("其他")<br>

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">&ensp;</span>@Html.LabelFor(model => model.HomeNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.HomeNumber, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(model => model.HomeNumber, new { htmlAttributes = new { @class = "form-control" } })

                            <span style="color:red;">*</span>@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                            <div class="web">
                                <div class="wrap" id="wrap">
                                    @Html.DropDownListFor(model => model.City, new List<SelectListItem>{
                                        new SelectListItem{ Value="0",Text="選取縣市"},
                                        new SelectListItem{ Value="臺北市",Text="臺北市"},
                                        new SelectListItem{ Value="新北市",Text="新北市"},
                                        new SelectListItem{ Value="桃園市",Text="桃園市"},
                                        new SelectListItem{ Value="臺中市",Text="臺中市"},
                                        new SelectListItem{ Value="臺南市",Text="臺南市"},
                                        new SelectListItem{ Value="高雄市",Text="高雄市"},
                                        new SelectListItem{ Value="基隆市",Text="基隆市"},
                                        new SelectListItem{ Value="新竹市",Text="新竹市"},
                                        new SelectListItem{ Value="嘉義市",Text="嘉義市"},
                                        new SelectListItem{ Value="新竹縣",Text="新竹縣"},
                                        new SelectListItem{ Value="苗栗縣",Text="苗栗縣"},
                                        new SelectListItem{ Value="彰化縣",Text="彰化縣"},
                                        new SelectListItem{ Value="南投縣",Text="南投縣"},
                                        new SelectListItem{ Value="雲林縣",Text="雲林縣"},
                                        new SelectListItem{ Value="嘉義縣",Text="嘉義縣"},
                                        new SelectListItem{ Value="屏東縣",Text="屏東縣"},
                                        new SelectListItem{ Value="宜蘭縣",Text="宜蘭縣"},
                                        new SelectListItem{ Value="花蓮縣",Text="花蓮縣"},
                                        new SelectListItem{ Value="臺東縣",Text="臺東縣"},
                                        new SelectListItem{ Value="澎湖縣",Text="澎湖縣"},
                                        new SelectListItem{ Value="金門縣",Text="金門縣"},
                                        new SelectListItem{ Value="連江縣",Text="連江縣"},
                               }, new { @id = "Region", @class = "form-select form-select-lg mb-3" })

                                    @Html.DropDownListFor(model => model.Region, new List<SelectListItem>{
                                                new SelectListItem { Value="選取鄉政市區",Text="選取鄉政市區"}
                                            }, new { @id = "Town", @class = "form-select form-select-lg mb-3" })
                                    @*<select id="Town" disabled class="form-select form-select-lg mb-3" aria-label=".form-select-sm example">
                        <option selected>選取鄉政市區</option>
                    </select>*@
                                    @Html.TextBoxFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                                </div>
                            </div>


                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            <div class="button-block">
                                <input class="button" type="reset" name="reset" value="清除" />
                                <input class="button" type="submit" name="submit" id="submitInput" value="送出" /> <br />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section endJS{

    @*<script src="~/Asset/Js/MemberCenter/MemberRegisterPage.js" crossorigin="anonymous"></script>
    <script>
        function ValidMemberNAme() {
            $.ajax({
                url: "",
                data: {

                }
            })
        }
    </script>*@
    
    <script>
        window.onload = () => {
            requestAreaJson();
            document.querySelector("#Region").addEventListener("change", findTown);

        }
        const url = "https://raw.githubusercontent.com/eric861129/BuildSchoolLab/main/TwArea.json";
        let areaArray = [];
        let _area;
        let item;
        let Town = document.getElementById("Town");

        let townArray = [];
        let CountiesAttractionArray = [];
        let texNode;
        let CountiesLat;
        let CountiesLng;
        let pickcenterLat;
        let pickcenterLng;
        let AttractionLat;
        let AttractionLng;
        let AttractionName;
        var marker;
        var _pickAttraction;


        function requestAreaJson() {
            let xhr = new XMLHttpRequest();
            xhr.onload = function () {
                areaArray = JSON.parse(this.response);
            }
            xhr.open("GET", url);
            xhr.send();
        }
        function findTown() {
            //Town.innerHTML = '<option selected>選取鄉政市區</option>';

            _area = document.querySelector("#Region").value;
            document.querySelector("#Town").disabled = null;
            areaArray.forEach(x => {
                if (x.Counties == _area) {
                    townArray = x.township;
                    CountiesLat = x.lat;
                    CountiesLng = x.lng;
                    Town.innerHTML = "";
                    townArray.forEach(item => {
                        let newOption = document.createElement('option');
                        texNode = document.createTextNode(item);
                        newOption.appendChild(texNode);
                        Town.appendChild(newOption);
                    });
                }
            });
        }      
      

        
    </script>

}


